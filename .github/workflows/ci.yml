name: GitHub CI

on:
  workflow_dispatch:
  pull_request:
  push:
  schedule:
    - cron: 0 0 * * 0
  workflow_dispatch:

defaults:
  run:
    shell: "bash -Eeuo pipefail -x {0}"

jobs:
  generate-jobs:
    name: Generate Jobs
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.generate-jobs.outputs.strategy }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker-library/bashbrew@HEAD
      - id: generate-jobs
        name: Generate Jobs
        run: |
          strategy="$("$BASHBREW_SCRIPTS/github-actions/generate.sh")"
          strategy="$(.github/workflows/munge.sh -c <<<"$strategy")"
          echo "strategy=$strategy" >> "$GITHUB_OUTPUT"
          jq . <<<"$strategy" # sanity check / debugging aid

  test:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy) }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Prepare Environment
        run: ${{ matrix.runs.prepare }}
      - name: Pull Dependencies
        run: ${{ matrix.runs.pull }}
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}
      - name: History ${{ matrix.name }}
        run: ${{ matrix.runs.history }}
      - name: Test ${{ matrix.name }}
        run: ${{ matrix.runs.test }}
      - name: '"docker images"'
        run: ${{ matrix.runs.images }}
      - name: Push ${{ matrix.runs.name }} to docker registry
        run: |
          echo "${DOCKER_REGISTRY_TOKEN}" | docker login -u "${DOCKER_REGISTRY_USERNAME}" --password-stdin;
          for tag in $( docker images | grep postgresql | awk '{ print $2 }' ); do
              docker tag postgresql:$tag panascais/postgresql:$tag;
              docker push panascais/postgresql:$tag;
          done;
        env:
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
          DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
      - name: Push ${{ matrix.runs.name }} to quay.io registry
        run: |
          echo "${QUAY_REGISTRY_TOKEN}" | docker login quay.io -u "${QUAY_REGISTRY_USERNAME}" --password-stdin;
          for tag in $( docker images | grep postgresql | awk '{ print $2 }' ); do
              docker tag postgresql:$tag quay.io/panascais/postgresql:$tag;
              docker push quay.io/panascais/postgresql:$tag;
          done;
        env:
          QUAY_REGISTRY_TOKEN: ${{ secrets.QUAY_REGISTRY_TOKEN }}
          QUAY_REGISTRY_USERNAME: ${{ secrets.QUAY_REGISTRY_USERNAME }}
      - name: Push ${{ matrix.runs.name }} to ghcr.io registry
        run: |
          echo "${CONTAINER_REGISTRY_TOKEN}" | docker login ghcr.io -u "${CONTAINER_REGISTRY_USERNAME}" --password-stdin;
          for tag in $( docker images | grep postgresql | awk '{ print $2 }' ); do
              docker tag postgresql:$tag ghcr.io/panascais-docker/postgresql/postgresql:$tag;
              docker push ghcr.io/panascais-docker/postgresql/postgresql:$tag;
          done;
        env:
          CONTAINER_REGISTRY_TOKEN: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}
          CONTAINER_REGISTRY_USERNAME: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
